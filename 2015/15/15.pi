% Advent of Code 2015
% Day 15: Science for Hungry People
% http://adventofcode.com/day/15
% Picat 1.6 - http://picat-lang.org

import cp.
import util.

score(Cap, Dur, Fla, Tex, Cal, S) =>
    N = Cap.length(),
    Xs = new_array(N), Xs :: 0..100,
    sum(Xs) #=< 100,
    SCap #= sum([Cap[I] * Xs[I] : I in 1..N]), SCap #> 0,
    SDur #= sum([Dur[I] * Xs[I] : I in 1..N]), SDur #> 0,
    SFla #= sum([Fla[I] * Xs[I] : I in 1..N]), SFla #> 0,
    STex #= sum([Tex[I] * Xs[I] : I in 1..N]), STex #> 0,

    SCal #= sum([Cal[I] * Xs[I] : I in 1..N]), SCal #= 500,

    S #= SCap * SDur * SFla * STex,
    solve([$max(S)], Xs).

main =>
    Cap = {}, Dur = {}, Fla = {}, Tex = {}, Cal = {},
    while (Line = read_line(), Line != end_of_file)
        Data = Line.split(" ,").to_array(),
        Cap := Cap ++ {Data[3].to_integer()},
        Dur := Dur ++ {Data[5].to_integer()},
        Fla := Fla ++ {Data[7].to_integer()},
        Tex := Tex ++ {Data[9].to_integer()},
        Cal := Cal ++ {Data[11].to_integer()}
    end,
    score(Cap, Dur, Fla, Tex, Cal, S),
    println(S).
